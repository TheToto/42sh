# LEXER
* [x] Basic lexer
* [~] Handle quotes (in progress)

# PARSER
* [x] Handle GRAMMAR
* [x] Redirections
* [x] Case statement
* [x] Handle ls if (pb with if token)
* [x] Show prompt PS2 in if/while/...
* [x] Handling heredoc from file & interactive

# TEST SUITE
* [x] Set up ceedling
* [x] Advanced tests
* [x] Test suite options
* [x] Setup timeout
* [ ] Test until

# CODING STYLE
* [ ] Indent DOXYGEN with 0 space
* [ ] Send tickets to ACU for broken moulinette

# DOC
* [x] Set up Doxygen
* [x] Write manual

# Option parser
* [~] SHOPT
* [x] Others

# AST
* [x] Create AST
* [x] Print AST
* [ ] Set guards for NULL or incorrect AST
* [x] Destroy AST

# CMAKE
* [x] Main rule
* [x] Make check
* [x] Make clean

# Options
* [x] 0.3 options
* [~] shopt

# Execution
* [x] if statement
* [x] var assignment
* [x] while/until statement
* [x] not statement
* [x] Simple command
* [x] Redirections
* [x] Pipes
* [x] Split executions functions into different files
* [ ] Handle expansion in redirections
* [x] Handle redirections in declaration of functions
* [x] Case statement
* [x] Handle func declaration
* [x] Handle parameters
* [x] Handle positionnal parameters
* [ ] Handle double output redirection
* [ ] Replace hardcoded file desciptors (in/err/out)

# Interactive mode
* [x] Interactive mode
* [x] History
* [x] Ressource file reader
* [ ] Catch Ctrl-C
* [ ] Catch Ctrl-D

# Built in
* [~] exit (need to fix exit with no arg)
* [x] cd
* [~] shopt (output handled)
* [ ] export
* [ ] alias/unalias
* [ ] echo
* [ ] continue/break
* [ ] source
* [x] history

# RETURN VALUE
* [~] Fix wrong return value
